CREATE SEQUENCE GEN_ECF_IMPRESSORA;
CREATE SEQUENCE GEN_R02;
CREATE SEQUENCE GEN_ECF_EMPRESA;
CREATE SEQUENCE GEN_ECF_FUNCIONARIO;
CREATE SEQUENCE GEN_ECF_RESOLUCAO;
CREATE SEQUENCE GEN_ECF_TIPO_PAGAMENTO;
CREATE SEQUENCE GEN_R01;
CREATE SEQUENCE GEN_ECF_TURNO;
CREATE SEQUENCE GEN_R06;
CREATE SEQUENCE GEN_UNIDADE_PRODUTO;
CREATE SEQUENCE GEN_FICHA_TECNICA;
CREATE SEQUENCE GEN_ECF_CAIXA;
CREATE SEQUENCE GEN_BANCO;
CREATE SEQUENCE GEN_CFOP;
CREATE SEQUENCE GEN_SITUACAO_CLI;
CREATE SEQUENCE GEN_SINTEGRA_60M;
CREATE SEQUENCE GEN_SINTEGRA_60A;
CREATE SEQUENCE GEN_R07;
CREATE SEQUENCE GEN_R03;
CREATE SEQUENCE GEN_PRODUTO;
CREATE SEQUENCE GEN_ECF_OPERADOR;
CREATE SEQUENCE GEN_ECF_POSICAO_COMPONENTES;
CREATE SEQUENCE GEN_CLIENTE;
CREATE SEQUENCE GEN_ECF_CONTADOR;
CREATE SEQUENCE GEN_ECF_DAV_CABECALHO;
CREATE SEQUENCE GEN_ECF_DAV_DETALHE;
CREATE SEQUENCE GEN_ECF_CHEQUE_CLIENTE;
CREATE SEQUENCE GEN_NF2_CABECALHO;
CREATE SEQUENCE GEN_ECF_CONFIGURACAO;
CREATE SEQUENCE GEN_ECF_MOVIMENTO;
CREATE SEQUENCE GEN_PRODUTO_PROMOCAO;
CREATE SEQUENCE GEN_ECF_SUPRIMENTO;
CREATE SEQUENCE GEN_ECF_PRE_VENDA_CABECALHO;
CREATE SEQUENCE GEN_ECF_DOCUMENTOS_EMITIDOS;
CREATE SEQUENCE GEN_ECF_SANGRIA;
CREATE SEQUENCE GEN_ECF_RECEBIMENTO_NAO_FISCAL;
CREATE SEQUENCE GEN_NF2_DETALHE;
CREATE SEQUENCE GEN_ECF_PRE_VENDA_DETALHE;
CREATE SEQUENCE GEN_ECF_VENDA_CABECALHO;
CREATE SEQUENCE GEN_ECF_TOTAL_TIPO_PGTO;
CREATE SEQUENCE GEN_ECF_VENDA_DETALHE;

CREATE TABLE ECF_IMPRESSORA (
  ID INTEGER  NOT NULL  ,
  NUMERO INTEGER    ,
  CODIGO VARCHAR(10)    ,
  SERIE VARCHAR(20)    ,
  IDENTIFICACAO VARCHAR(250)    ,
  MC CHAR(2)    ,
  MD CHAR(2)    ,
  VR CHAR(2)    ,
  TIPO VARCHAR(7)    ,
  MARCA VARCHAR(30)    ,
  MODELO VARCHAR(30)    ,
  MODELO_ACBR VARCHAR(30)    ,
  MODELO_DOCUMENTO_FISCAL CHAR(2)    ,
  VERSAO VARCHAR(30)    ,
  LE CHAR(1)    ,
  LEF CHAR(1)    ,
  MFD CHAR(1)    ,
  LACRE_NA_MFD CHAR(1)    ,
  DOCTO VARCHAR(60)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_ECF_IMPRESSORA FOR ECF_IMPRESSORA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_IMPRESSORA,1); 
END
/


CREATE TABLE R02 (
  ID INTEGER  NOT NULL  ,
  ID_OPERADOR INTEGER  NOT NULL  ,
  ID_IMPRESSORA INTEGER  NOT NULL  ,
  ID_ECF_CAIXA INTEGER    ,
  CRZ INTEGER    ,
  COO INTEGER    ,
  CRO INTEGER    ,
  DATA_MOVIMENTO DATE    ,
  DATA_EMISSAO DATE    ,
  HORA_EMISSAO VARCHAR(8)    ,
  VENDA_BRUTA DECIMAL(18,6)    ,
  GRANDE_TOTAL DECIMAL(18,6)    ,
  SINCRONIZADO CHAR(1)    ,
  HASH_TRIPA VARCHAR(32)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_R02 FOR R02 ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_R02,1); 
END
/


CREATE TABLE ECF_EMPRESA (
  ID INTEGER  NOT NULL  ,
  ID_EMPRESA INTEGER  NOT NULL  ,
  RAZAO_SOCIAL VARCHAR(150)    ,
  NOME_FANTASIA VARCHAR(150)    ,
  CNPJ VARCHAR(14)    ,
  INSCRICAO_ESTADUAL VARCHAR(30)    ,
  INSCRICAO_MUNICIPAL VARCHAR(30)    ,
  MATRIZ_FILIAL CHAR(1)    ,
  DATA_CADASTRO DATE    ,
  ENDERECO VARCHAR(100)    ,
  NUMERO VARCHAR(10)    ,
  COMPLEMENTO VARCHAR(100)    ,
  BAIRRO VARCHAR(50)    ,
  CIDADE VARCHAR(50)    ,
  CODIGO_MUNICIPIO_IBGE INTEGER    ,
  UF CHAR(2)    ,
  CEP VARCHAR(8)    ,
  FONE1 VARCHAR(10)    ,
  FONE2 VARCHAR(10)    ,
  CONTATO VARCHAR(30)    ,
  SUFRAMA VARCHAR(9)    ,
  EMAIL VARCHAR(250)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_EMPRESA)
    REFERENCES ECF_EMPRESA(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_EMPRESA_FILIAL ON ECF_EMPRESA (ID_EMPRESA);

CREATE TRIGGER AINC_ECF_EMPRESA FOR ECF_EMPRESA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_EMPRESA,1); 
END
/


CREATE TABLE ECF_FUNCIONARIO (
  ID INTEGER  NOT NULL  ,
  NOME VARCHAR(100)    ,
  TELEFONE VARCHAR(10)    ,
  CELULAR VARCHAR(10)    ,
  EMAIL VARCHAR(250)    ,
  COMISSAO_VISTA DECIMAL(18,6)    ,
  COMISSAO_PRAZO DECIMAL(18,6)    ,
  NIVEL_AUTORIZACAO CHAR(1)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_ECF_FUNCIONARIO FOR ECF_FUNCIONARIO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_FUNCIONARIO,1); 
END
/


CREATE TABLE ECF_RESOLUCAO (
  ID INTEGER  NOT NULL  ,
  RESOLUCAO_TELA VARCHAR(20)    ,
  LARGURA INTEGER    ,
  ALTURA INTEGER    ,
  IMAGEM_TELA VARCHAR(50)    ,
  IMAGEM_MENU VARCHAR(50)    ,
  IMAGEM_SUBMENU VARCHAR(50)    ,
  HOTTRACK_COLOR VARCHAR(20)    ,
  ITEM_STYLE_FONT_NAME VARCHAR(20)    ,
  ITEM_STYLE_FONT_COLOR VARCHAR(20)    ,
  ITEM_SEL_STYLE_COLOR VARCHAR(20)    ,
  LABEL_TOTAL_GERAL_FONT_COLOR VARCHAR(20)    ,
  ITEM_STYLE_FONT_STYLE VARCHAR(20)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_ECF_RESOLUCAO FOR ECF_RESOLUCAO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_RESOLUCAO,1); 
END
/


CREATE TABLE ECF_TIPO_PAGAMENTO (
  ID INTEGER  NOT NULL  ,
  CODIGO CHAR(3)    ,
  DESCRICAO VARCHAR(20)    ,
  TEF CHAR(1)    ,
  IMPRIME_VINCULADO CHAR(1)    ,
  PERMITE_TROCO CHAR(1)    ,
  TEF_TIPO_GP CHAR(1)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_ECF_TIPO_PAGAMENTO FOR ECF_TIPO_PAGAMENTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_TIPO_PAGAMENTO,1); 
END
/


CREATE TABLE R01 (
  ID INTEGER  NOT NULL  ,
  CNPJ_SH VARCHAR(14)    ,
  INSCRICAO_ESTADUAL_SH VARCHAR(14)    ,
  INSCRICAO_MUNICIPAL_SH VARCHAR(14)    ,
  DENOMINACAO_SH VARCHAR(40)    ,
  NOME_PAF_ECF VARCHAR(40)    ,
  VERSAO_PAF_ECF VARCHAR(10)    ,
  MD5_PAF_ECF VARCHAR(32)    ,
  DATA_INICIAL DATE    ,
  DATA_FINAL DATE    ,
  VERSAO_ER VARCHAR(4)    ,
  NUMERO_LAUDO_PAF VARCHAR(40)    ,
  RAZAO_SOCIAL_SH VARCHAR(40)    ,
  ENDERECO_SH VARCHAR(40)    ,
  NUMERO_SH VARCHAR(10)    ,
  COMPLEMENTO_SH VARCHAR(40)    ,
  BAIRRO_SH VARCHAR(40)    ,
  CIDADE_SH VARCHAR(40)    ,
  CEP_SH VARCHAR(8)    ,
  UF_SH CHAR(2)    ,
  TELEFONE_SH VARCHAR(10)    ,
  CONTATO_SH VARCHAR(20)    ,
  PRINCIPAL_EXECUTAVEL VARCHAR(40)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_R01 FOR R01 ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_R01,1); 
END
/


CREATE TABLE ECF_TURNO (
  ID INTEGER  NOT NULL  ,
  DESCRICAO VARCHAR(10)    ,
  HORA_INICIO VARCHAR(8)    ,
  HORA_FIM VARCHAR(8)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_ECF_TURNO FOR ECF_TURNO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_TURNO,1); 
END
/


CREATE TABLE R06 (
  ID INTEGER  NOT NULL  ,
  ID_OPERADOR INTEGER  NOT NULL  ,
  ID_IMPRESSORA INTEGER  NOT NULL  ,
  ID_ECF_CAIXA INTEGER    ,
  COO INTEGER    ,
  GNF INTEGER    ,
  GRG INTEGER    ,
  CDC INTEGER    ,
  DENOMINACAO CHAR(2)    ,
  DATA_EMISSAO DATE    ,
  HORA_EMISSAO VARCHAR(8)    ,
  SINCRONIZADO CHAR(1)    ,
  HASH_TRIPA VARCHAR(32)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_R06 FOR R06 ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_R06,1); 
END
/


CREATE TABLE UNIDADE_PRODUTO (
  ID INTEGER  NOT NULL  ,
  NOME VARCHAR(10)    ,
  DESCRICAO BLOB    ,
  PODE_FRACIONAR CHAR(1)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_UNIDADE_PRODUTO FOR UNIDADE_PRODUTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_UNIDADE_PRODUTO,1); 
END
/


CREATE TABLE ECF_CAIXA (
  ID INTEGER  NOT NULL  ,
  NOME VARCHAR(30)    ,
  DATA_CADASTRO DATE      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_ECF_CAIXA FOR ECF_CAIXA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_CAIXA,1); 
END
/


CREATE TABLE BANCO (
  ID INTEGER  NOT NULL  ,
  CODIGO INTEGER    ,
  NOME VARCHAR(100)    ,
  URL VARCHAR(255)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_BANCO FOR BANCO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_BANCO,1); 
END
/


CREATE TABLE CFOP (
  ID INTEGER  NOT NULL  ,
  CFOP INTEGER    ,
  DESCRICAO BLOB    ,
  APLICACAO BLOB      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_CFOP FOR CFOP ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_CFOP,1); 
END
/


CREATE TABLE SITUACAO_CLI (
  ID INTEGER  NOT NULL  ,
  NOME VARCHAR(20)    ,
  DESCRICAO BLOB      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_SITUACAO_CLI FOR SITUACAO_CLI ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_SITUACAO_CLI,1); 
END
/


CREATE TABLE SINTEGRA_60M (
  ID INTEGER  NOT NULL  ,
  DATA_EMISSAO DATE    ,
  NUMERO_SERIE_ECF VARCHAR(20)    ,
  NUMERO_EQUIPAMENTO INTEGER    ,
  MODELO_DOCUMENTO_FISCAL CHAR(2)    ,
  COO_INICIAL INTEGER    ,
  COO_FINAL INTEGER    ,
  CRZ INTEGER    ,
  CRO INTEGER    ,
  VALOR_VENDA_BRUTA DECIMAL(18,6)    ,
  VALOR_GRANDE_TOTAL DECIMAL(18,6)      ,
PRIMARY KEY(ID));

CREATE TRIGGER AINC_SINTEGRA_60M FOR SINTEGRA_60M ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_SINTEGRA_60M,1); 
END
/


CREATE TABLE SINTEGRA_60A (
  ID INTEGER  NOT NULL  ,
  ID_SINTEGRA_60M INTEGER  NOT NULL  ,
  SITUACAO_TRIBUTARIA VARCHAR(4)    ,
  VALOR DECIMAL(18,6)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_SINTEGRA_60M)
    REFERENCES SINTEGRA_60M(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_60M_60A ON SINTEGRA_60A (ID_SINTEGRA_60M);

CREATE TRIGGER AINC_SINTEGRA_60A FOR SINTEGRA_60A ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_SINTEGRA_60A,1); 
END
/


CREATE TABLE R07 (
  ID INTEGER  NOT NULL  ,
  ID_R06 INTEGER    ,
  CCF INTEGER    ,
  MEIO_PAGAMENTO VARCHAR(20)    ,
  VALOR_PAGAMENTO DECIMAL(18,6)    ,
  ESTORNO CHAR(1)    ,
  VALOR_ESTORNO DECIMAL(18,6)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_R06)
    REFERENCES R06(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_R06_R07 ON R07 (ID_R06);

CREATE TRIGGER AINC_R07 FOR R07 ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_R07,1); 
END
/


CREATE TABLE R03 (
  ID INTEGER  NOT NULL  ,
  ID_R02 INTEGER  NOT NULL  ,
  TOTALIZADOR_PARCIAL VARCHAR(10)    ,
  VALOR_ACUMULADO DECIMAL(18,6)    ,
  HASH_TRIPA VARCHAR(32)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_R02)
    REFERENCES R02(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_R02_R03 ON R03 (ID_R02);

CREATE TRIGGER AINC_R03 FOR R03 ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_R03,1); 
END
/


CREATE TABLE PRODUTO (
  ID INTEGER  NOT NULL  ,
  ID_UNIDADE_PRODUTO INTEGER  NOT NULL  ,
  GTIN VARCHAR(14)    ,
  CODIGO_INTERNO VARCHAR(20)    ,
  NOME VARCHAR(100)    ,
  DESCRICAO BLOB    ,
  DESCRICAO_PDV VARCHAR(30)    ,
  VALOR_VENDA DECIMAL(18,6)    ,
  QTD_ESTOQUE DECIMAL(18,6)    ,
  ESTOQUE_MIN DECIMAL(18,6)    ,
  ESTOQUE_MAX DECIMAL(18,6)    ,
  IAT CHAR(1)    ,
  IPPT CHAR(1)    ,
  NCM VARCHAR(8)    ,
  TIPO_ITEM_SPED CHAR(2)    ,
  DATA_ESTOQUE DATE    ,
  HASH_TRIPA VARCHAR(32)    ,
  TAXA_IPI DECIMAL(18,6)    ,
  TAXA_ISSQN DECIMAL(18,6)    ,
  TAXA_PIS DECIMAL(18,6)    ,
  TAXA_COFINS DECIMAL(18,6)    ,
  TAXA_ICMS DECIMAL(18,6)    ,
  CST CHAR(3)    ,
  TOTALIZADOR_PARCIAL VARCHAR(10)    ,
  ECF_ICMS_ST VARCHAR(4)    ,
  CODIGO_BALANCA INTEGER      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_UNIDADE_PRODUTO)
    REFERENCES UNIDADE_PRODUTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_UNIDADE_PRODUTO ON PRODUTO (ID_UNIDADE_PRODUTO);

CREATE TRIGGER AINC_PRODUTO FOR PRODUTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_PRODUTO,1); 
END
/


CREATE TABLE FICHA_TECNICA (
  ID INTEGER  NOT NULL  ,
  ID_PRODUTO INTEGER  NOT NULL  ,
  DESCRICAO VARCHAR(50)    ,
  ID_PRODUTO_FILHO INTEGER    ,
  QUANTIDADE DECIMAL(18,6)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_PRODUTO)
    REFERENCES PRODUTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_PRODUTO_FICHA_TECNICA ON FICHA_TECNICA (ID_PRODUTO);

CREATE TRIGGER AINC_FICHA_TECNICA FOR FICHA_TECNICA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_FICHA_TECNICA,1); 
END
/


CREATE TABLE ECF_OPERADOR (
  ID INTEGER  NOT NULL  ,
  ID_ECF_FUNCIONARIO INTEGER  NOT NULL  ,
  LOGIN VARCHAR(20)    ,
  SENHA VARCHAR(20)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_ECF_FUNCIONARIO)
    REFERENCES ECF_FUNCIONARIO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_FUNCIONARIO_OPERADOR ON ECF_OPERADOR (ID_ECF_FUNCIONARIO);

CREATE TRIGGER AINC_ECF_OPERADOR FOR ECF_OPERADOR ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_OPERADOR,1); 
END
/

CREATE TABLE ECF_POSICAO_COMPONENTES (
  ID INTEGER  NOT NULL  ,
  ID_ECF_RESOLUCAO INTEGER  NOT NULL  ,
  NOME VARCHAR(100)    ,
  ALTURA INTEGER    ,
  LARGURA INTEGER    ,
  TOPO INTEGER    ,
  ESQUERDA INTEGER    ,
  TAMANHO_FONTE INTEGER   DEFAULT 0 ,
  TEXTO VARCHAR(250)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_ECF_RESOLUCAO)
    REFERENCES ECF_RESOLUCAO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_RES_POSICAO_COMPONENTES ON ECF_POSICAO_COMPONENTES (ID_ECF_RESOLUCAO);

CREATE TRIGGER AINC_ECF_POSICAO_COMPONENTES FOR ECF_POSICAO_COMPONENTES ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_POSICAO_COMPONENTES,1); 
END
/


CREATE TABLE CLIENTE (
  ID INTEGER  NOT NULL  ,
  ID_SITUACAO_CLI INTEGER  NOT NULL  ,
  NOME VARCHAR(150)    ,
  CPF_CNPJ VARCHAR(14)    ,
  RG VARCHAR(20)    ,
  ORGAO_RG VARCHAR(10)    ,
  INSCRICAO_ESTADUAL VARCHAR(30)    ,
  INSCRICAO_MUNICIPAL VARCHAR(30)    ,
  DESDE DATE    ,
  TIPO_PESSOA CHAR(1)    ,
  EXCLUIDO CHAR(1)    ,
  DATA_CADASTRO DATE      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_SITUACAO_CLI)
    REFERENCES SITUACAO_CLI(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_SITUACAO_CLIENTE ON CLIENTE (ID_SITUACAO_CLI);

CREATE TRIGGER AINC_CLIENTE FOR CLIENTE ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_CLIENTE,1); 
END
/


CREATE TABLE ECF_CONTADOR (
  ID INTEGER  NOT NULL  ,
  ID_ECF_EMPRESA INTEGER  NOT NULL  ,
  CPF VARCHAR(11)    ,
  CNPJ VARCHAR(14)    ,
  NOME VARCHAR(100)    ,
  INSCRICAO_CRC VARCHAR(15)    ,
  FONE VARCHAR(15)    ,
  FAX VARCHAR(15)    ,
  LOGRADOURO VARCHAR(100)    ,
  NUMERO INTEGER    ,
  COMPLEMENTO VARCHAR(100)    ,
  BAIRRO VARCHAR(30)    ,
  CEP VARCHAR(8)    ,
  CODIGO_MUNICIPIO INTEGER    ,
  UF CHAR(2)    ,
  EMAIL VARCHAR(250)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_ECF_EMPRESA)
    REFERENCES ECF_EMPRESA(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_EMPRESA_CONTADOR ON ECF_CONTADOR (ID_ECF_EMPRESA);

CREATE TRIGGER AINC_ECF_CONTADOR FOR ECF_CONTADOR ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_CONTADOR,1); 
END
/


CREATE TABLE ECF_DAV_CABECALHO (
  ID INTEGER  NOT NULL  ,
  ID_CLIENTE INTEGER  NOT NULL  ,
  CCF INTEGER    ,
  COO INTEGER    ,
  NOME_DESTINATARIO VARCHAR(100)    ,
  CPF_CNPJ_DESTINATARIO VARCHAR(14)    ,
  DATA_EMISSAO DATE    ,
  HORA_EMISSAO VARCHAR(8)    ,
  SITUACAO CHAR(1)    ,
  TAXA_ACRESCIMO DECIMAL(18,6)    ,
  ACRESCIMO DECIMAL(18,6)    ,
  TAXA_DESCONTO DECIMAL(18,6)    ,
  DESCONTO DECIMAL(18,6)    ,
  SUBTOTAL DECIMAL(18,6)    ,
  VALOR DECIMAL(18,6)    ,
  HASH_TRIPA VARCHAR(32)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_CLIENTE)
    REFERENCES CLIENTE(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_CLIENTE_DAV ON ECF_DAV_CABECALHO (ID_CLIENTE);

CREATE TRIGGER AINC_ECF_DAV_CABECALHO FOR ECF_DAV_CABECALHO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_DAV_CABECALHO,1); 
END
/


CREATE TABLE ECF_DAV_DETALHE (
  ID INTEGER  NOT NULL  ,
  ID_PRODUTO INTEGER  NOT NULL  ,
  ID_ECF_DAV INTEGER  NOT NULL  ,
  ITEM INTEGER    ,
  QUANTIDADE DECIMAL(18,6)    ,
  VALOR_UNITARIO DECIMAL(18,6)    ,
  VALOR_TOTAL DECIMAL(18,6)    ,
  CANCELADO CHAR(1)    ,
  MESCLA_PRODUTO CHAR(1)      ,
PRIMARY KEY(ID)    ,
  FOREIGN KEY(ID_ECF_DAV)
    REFERENCES ECF_DAV_CABECALHO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_PRODUTO)
    REFERENCES PRODUTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_DAV_CAB_DET ON ECF_DAV_DETALHE (ID_ECF_DAV);
CREATE INDEX FK_PRODUTO_DAV_DET ON ECF_DAV_DETALHE (ID_PRODUTO);

CREATE TRIGGER AINC_ECF_DAV_DETALHE FOR ECF_DAV_DETALHE ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_DAV_DETALHE,1); 
END
/


CREATE TABLE ECF_CHEQUE_CLIENTE (
  ID INTEGER  NOT NULL  ,
  ID_BANCO INTEGER  NOT NULL  ,
  ID_CLIENTE INTEGER  NOT NULL  ,
  NUMERO_CHEQUE INTEGER    ,
  DATA_CHEQUE DATE    ,
  VALOR_CHEQUE DECIMAL(18,6)    ,
  OBSERVACOES BLOB      ,
PRIMARY KEY(ID)    ,
  FOREIGN KEY(ID_CLIENTE)
    REFERENCES CLIENTE(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_BANCO)
    REFERENCES BANCO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_CLIENTE_CHEQUE ON ECF_CHEQUE_CLIENTE (ID_CLIENTE);
CREATE INDEX FK_BANCO_CHEQUE ON ECF_CHEQUE_CLIENTE (ID_BANCO);

CREATE TRIGGER AINC_ECF_CHEQUE_CLIENTE FOR ECF_CHEQUE_CLIENTE ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_CHEQUE_CLIENTE,1); 
END
/


CREATE TABLE NF2_CABECALHO (
  ID INTEGER  NOT NULL  ,
  ID_ECF_FUNCIONARIO INTEGER  NOT NULL  ,
  ID_CLIENTE INTEGER  NOT NULL  ,
  CFOP INTEGER  NOT NULL  ,
  NUMERO VARCHAR(6)    ,
  DATA_EMISSAO DATE    ,
  HORA_EMISSAO VARCHAR(8)    ,
  SERIE CHAR(2)    ,
  SUBSERIE CHAR(2)    ,
  TOTAL_PRODUTOS DECIMAL(18,6)    ,
  TOTAL_NF DECIMAL(18,6)    ,
  BASE_ICMS DECIMAL(18,6)    ,
  ICMS DECIMAL(18,6)    ,
  ICMS_OUTRAS DECIMAL(18,6)    ,
  ISSQN DECIMAL(18,6)    ,
  PIS DECIMAL(18,6)    ,
  COFINS DECIMAL(18,6)    ,
  IPI DECIMAL(18,6)    ,
  TAXA_ACRESCIMO DECIMAL(18,6)    ,
  ACRESCIMO DECIMAL(18,6)    ,
  ACRESCIMO_ITENS DECIMAL(18,6)    ,
  TAXA_DESCONTO DECIMAL(18,6)    ,
  DESCONTO DECIMAL(18,6)    ,
  DESCONTO_ITENS DECIMAL(18,6)    ,
  CANCELADA CHAR(1)    ,
  SINCRONIZADO CHAR(1)      ,
PRIMARY KEY(ID)    ,
  FOREIGN KEY(ID_CLIENTE)
    REFERENCES CLIENTE(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_FUNCIONARIO)
    REFERENCES ECF_FUNCIONARIO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_CLIENTE_NF2 ON NF2_CABECALHO (ID_CLIENTE);
CREATE INDEX FK_VENDEDOR_NF2 ON NF2_CABECALHO (ID_ECF_FUNCIONARIO);

CREATE TRIGGER AINC_NF2_CABECALHO FOR NF2_CABECALHO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_NF2_CABECALHO,1); 
END
/


CREATE TABLE ECF_CONFIGURACAO (
  ID INTEGER  NOT NULL  ,
  ID_ECF_IMPRESSORA INTEGER  NOT NULL  ,
  ID_ECF_RESOLUCAO INTEGER  NOT NULL  ,
  ID_ECF_CAIXA INTEGER  NOT NULL  ,
  ID_ECF_EMPRESA INTEGER  NOT NULL  ,
  MENSAGEM_CUPOM VARCHAR(250)    ,
  PORTA_ECF CHAR(10)    ,
  PORTA_PINPAD CHAR(10)    ,
  PORTA_BALANCA CHAR(10)    ,
  IP_SERVIDOR VARCHAR(15)    ,
  IP_SITEF VARCHAR(15)    ,
  TIPO_TEF CHAR(2)    ,
  TITULO_TELA_CAIXA VARCHAR(100)    ,
  CAMINHO_IMAGENS_PRODUTOS VARCHAR(250)    ,
  CAMINHO_IMAGENS_MARKETING VARCHAR(250)    ,
  CAMINHO_IMAGENS_LAYOUT VARCHAR(250)    ,
  COR_JANELAS_INTERNAS VARCHAR(20)    ,
  MARKETING_ATIVO CHAR(1)    ,
  CFOP_ECF INTEGER    ,
  CFOP_NF2 INTEGER    ,
  TIMEOUT_ECF INTEGER    ,
  INTERVALO_ECF INTEGER    ,
  DESCRICAO_SUPRIMENTO VARCHAR(20)    ,
  DESCRICAO_SANGRIA VARCHAR(20)    ,
  TEF_TIPO_GP INTEGER    ,
  TEF_TEMPO_ESPERA INTEGER    ,
  TEF_ESPERA_STS INTEGER    ,
  TEF_NUMERO_VIAS INTEGER    ,
  INDICE_GERENCIAL_DAV INTEGER    ,
  DECIMAIS_QUANTIDADE INTEGER    ,
  DECIMAIS_VALOR INTEGER    ,
  SINCRONIZADO CHAR(1)    ,
  BITS_POR_SEGUNDO INTEGER    ,
  QTDE_MAXIMA_CARTOES INTEGER    ,
  PESQUISA_PARTE CHAR(1)    ,
  CONFIGURACAO_BALANCA VARCHAR(100)    ,
  PARAMETROS_DIVERSOS VARCHAR(250)      ,
PRIMARY KEY(ID)        ,
  FOREIGN KEY(ID_ECF_EMPRESA)
    REFERENCES ECF_EMPRESA(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_CAIXA)
    REFERENCES ECF_CAIXA(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_RESOLUCAO)
    REFERENCES ECF_RESOLUCAO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_IMPRESSORA)
    REFERENCES ECF_IMPRESSORA(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_EMPRESA_CONFIGURACAO ON ECF_CONFIGURACAO (ID_ECF_EMPRESA);
CREATE INDEX FK_CAIXA_CONFIGURACAO ON ECF_CONFIGURACAO (ID_ECF_CAIXA);
CREATE INDEX FK_RESOLUCAO_CONFIGURACAO ON ECF_CONFIGURACAO (ID_ECF_RESOLUCAO);
CREATE INDEX FK_IMPRESSORA_CONFIGURACAO ON ECF_CONFIGURACAO (ID_ECF_IMPRESSORA);

CREATE TRIGGER AINC_ECF_CONFIGURACAO FOR ECF_CONFIGURACAO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_CONFIGURACAO,1); 
END
/


CREATE TABLE ECF_MOVIMENTO (
  ID INTEGER  NOT NULL  ,
  ID_ECF_EMPRESA INTEGER  NOT NULL  ,
  ID_ECF_TURNO INTEGER  NOT NULL  ,
  ID_ECF_IMPRESSORA INTEGER  NOT NULL  ,
  ID_ECF_OPERADOR INTEGER  NOT NULL  ,
  ID_ECF_CAIXA INTEGER  NOT NULL  ,
  ID_GERENTE_SUPERVISOR INTEGER  NOT NULL  ,
  DATA_ABERTURA DATE    ,
  HORA_ABERTURA VARCHAR(8)    ,
  DATA_FECHAMENTO DATE    ,
  HORA_FECHAMENTO VARCHAR(8)    ,
  TOTAL_SUPRIMENTO DECIMAL(18,6)    ,
  TOTAL_SANGRIA DECIMAL(18,6)    ,
  TOTAL_NAO_FISCAL DECIMAL(18,6)    ,
  TOTAL_VENDA DECIMAL(18,6)    ,
  TOTAL_DESCONTO DECIMAL(18,6)    ,
  TOTAL_ACRESCIMO DECIMAL(18,6)    ,
  TOTAL_FINAL DECIMAL(18,6)    ,
  TOTAL_RECEBIDO DECIMAL(18,6)    ,
  TOTAL_TROCO DECIMAL(18,6)    ,
  TOTAL_CANCELADO DECIMAL(18,6)    ,
  STATUS_MOVIMENTO CHAR(1)  NOT NULL  ,
  SINCRONIZADO CHAR(1)      ,
PRIMARY KEY(ID)          ,
  FOREIGN KEY(ID_ECF_CAIXA)
    REFERENCES ECF_CAIXA(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_OPERADOR)
    REFERENCES ECF_OPERADOR(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_TURNO)
    REFERENCES ECF_TURNO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_IMPRESSORA)
    REFERENCES ECF_IMPRESSORA(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_EMPRESA)
    REFERENCES ECF_EMPRESA(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_CAIXA_MOVIMENTO ON ECF_MOVIMENTO (ID_ECF_CAIXA);
CREATE INDEX FK_OPERADOR_MOVIMENTO ON ECF_MOVIMENTO (ID_ECF_OPERADOR);
CREATE INDEX FK_TURNO_MOVIMENTO ON ECF_MOVIMENTO (ID_ECF_TURNO);
CREATE INDEX FK_IMPRESSORA_MOVIMENTO ON ECF_MOVIMENTO (ID_ECF_IMPRESSORA);
CREATE INDEX FK_EMPRESA_MOVIMENTO ON ECF_MOVIMENTO (ID_ECF_EMPRESA);

CREATE TRIGGER AINC_ECF_MOVIMENTO FOR ECF_MOVIMENTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_MOVIMENTO,1); 
END
/

CREATE TABLE PRODUTO_PROMOCAO (
  ID INTEGER  NOT NULL  ,
  ID_PRODUTO INTEGER  NOT NULL  ,
  DATA_INICIO DATE    ,
  DATA_FIM DATE    ,
  QUANTIDADE_EM_PROMOCAO DECIMAL(18,6)    ,
  QUANTIDADE_MAXIMA_CLIENTE DECIMAL(18,6)    ,
  VALOR DECIMAL(18,6)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_PRODUTO)
    REFERENCES PRODUTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_PRODUTO_PROMOCAO ON PRODUTO_PROMOCAO (ID_PRODUTO);

CREATE TRIGGER AINC_PRODUTO_PROMOCAO FOR PRODUTO_PROMOCAO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_PRODUTO_PROMOCAO,1); 
END
/


CREATE TABLE ECF_SUPRIMENTO (
  ID INTEGER  NOT NULL  ,
  ID_ECF_MOVIMENTO INTEGER  NOT NULL  ,
  DATA_SUPRIMENTO DATE    ,
  VALOR DECIMAL(18,6)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_ECF_MOVIMENTO)
    REFERENCES ECF_MOVIMENTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_MOVIMENTO_SUPRIMENTO ON ECF_SUPRIMENTO (ID_ECF_MOVIMENTO);

CREATE TRIGGER AINC_ECF_SUPRIMENTO FOR ECF_SUPRIMENTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_SUPRIMENTO,1); 
END
/


CREATE TABLE ECF_PRE_VENDA_CABECALHO (
  ID INTEGER  NOT NULL  ,
  ID_CLIENTE INTEGER  NOT NULL  ,
  DATA_PV DATE    ,
  HORA_PV VARCHAR(8)    ,
  SITUACAO CHAR(1)    ,
  CCF INTEGER    ,
  VALOR DECIMAL(18,6)    ,
  NOME_DESTINATARIO VARCHAR(100)    ,
  CPF_CNPJ_DESTINATARIO VARCHAR(14)    ,
  SUBTOTAL DECIMAL(18,6)    ,
  DESACONTO DECIMAL(18,6)    ,
  ACRESCIMO DECIMAL(18,6)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_CLIENTE)
    REFERENCES CLIENTE(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_CLIENTE_PRE_VENDA ON ECF_PRE_VENDA_CABECALHO (ID_CLIENTE);

CREATE TRIGGER AINC_ECF_PRE_VENDA_CABECALHO FOR ECF_PRE_VENDA_CABECALHO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_PRE_VENDA_CABECALHO,1); 
END
/


CREATE TABLE ECF_DOCUMENTOS_EMITIDOS (
  ID INTEGER  NOT NULL  ,
  ID_ECF_MOVIMENTO INTEGER  NOT NULL  ,
  DATA_EMISSAO DATE    ,
  HORA_EMISSAO VARCHAR(8)    ,
  TIPO CHAR(2)    ,
  COO INTEGER    ,
  SINCRONIZADO CHAR(1)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_ECF_MOVIMENTO)
    REFERENCES ECF_MOVIMENTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_MOVIMENTO_DOC_EMITIDOS ON ECF_DOCUMENTOS_EMITIDOS (ID_ECF_MOVIMENTO);

CREATE TRIGGER AINC_ECF_DOCUMENTOS_EMITIDOS FOR ECF_DOCUMENTOS_EMITIDOS ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_DOCUMENTOS_EMITIDOS,1); 
END
/


CREATE TABLE ECF_SANGRIA (
  ID INTEGER  NOT NULL  ,
  ID_ECF_MOVIMENTO INTEGER  NOT NULL  ,
  DATA_SANGRIA DATE    ,
  VALOR DECIMAL(18,6)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_ECF_MOVIMENTO)
    REFERENCES ECF_MOVIMENTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_MOVIMENTO_SANGRIA ON ECF_SANGRIA (ID_ECF_MOVIMENTO);

CREATE TRIGGER AINC_ECF_SANGRIA FOR ECF_SANGRIA ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_SANGRIA,1); 
END
/


CREATE TABLE ECF_RECEBIMENTO_NAO_FISCAL (
  ID INTEGER  NOT NULL  ,
  ID_ECF_MOVIMENTO INTEGER  NOT NULL  ,
  DATA_RECBTO DATE    ,
  DESCRICAO VARCHAR(50)    ,
  VALOR DECIMAL(18,6)      ,
PRIMARY KEY(ID)  ,
  FOREIGN KEY(ID_ECF_MOVIMENTO)
    REFERENCES ECF_MOVIMENTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_MOVIMENTO_RECBTO_NAO_FISCAL ON ECF_RECEBIMENTO_NAO_FISCAL (ID_ECF_MOVIMENTO);

CREATE TRIGGER AINC_ECF_RECEBIMENTO_NAO_FISCA FOR ECF_RECEBIMENTO_NAO_FISCAL ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_RECEBIMENTO_NAO_FISCAL,1); 
END
/


CREATE TABLE NF2_DETALHE (
  ID INTEGER  NOT NULL  ,
  ID_PRODUTO INTEGER  NOT NULL  ,
  ID_NF2_CABECALHO INTEGER  NOT NULL  ,
  CFOP INTEGER  NOT NULL  ,
  ITEM INTEGER    ,
  QUANTIDADE DECIMAL(18,6)    ,
  VALOR_UNITARIO DECIMAL(18,6)    ,
  VALOR_TOTAL DECIMAL(18,6)    ,
  BASE_ICMS DECIMAL(18,6)    ,
  TAXA_ICMS DECIMAL(18,6)    ,
  ICMS DECIMAL(18,6)    ,
  ICMS_OUTRAS DECIMAL(18,6)    ,
  ICMS_ISENTO DECIMAL(18,6)    ,
  TAXA_DESCONTO DECIMAL(18,6)    ,
  DESCONTO DECIMAL(18,6)    ,
  TAXA_ISSQN DECIMAL(18,6)    ,
  ISSQN DECIMAL(18,6)    ,
  TAXA_PIS DECIMAL(18,6)    ,
  PIS DECIMAL(18,6)    ,
  TAXA_COFINS DECIMAL(18,6)    ,
  COFINS DECIMAL(18,6)    ,
  TAXA_ACRESCIMO DECIMAL(18,6)    ,
  ACRESCIMO DECIMAL(18,6)    ,
  TAXA_IPI DECIMAL(18,6)    ,
  IPI DECIMAL(18,6)    ,
  CANCELADO CHAR(1)    ,
  CST CHAR(3)    ,
  MOVIMENTA_ESTOQUE CHAR(1)      ,
PRIMARY KEY(ID)    ,
  FOREIGN KEY(ID_NF2_CABECALHO)
    REFERENCES NF2_CABECALHO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_PRODUTO)
    REFERENCES PRODUTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_NF2_CAB_DET ON NF2_DETALHE (ID_NF2_CABECALHO);
CREATE INDEX FK_PRODUTO_NF2_DET ON NF2_DETALHE (ID_PRODUTO);

CREATE TRIGGER AINC_NF2_DETALHE FOR NF2_DETALHE ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_NF2_DETALHE,1); 
END
/


CREATE TABLE ECF_PRE_VENDA_DETALHE (
  ID INTEGER  NOT NULL  ,
  ID_PRODUTO INTEGER  NOT NULL  ,
  ID_ECF_PRE_VENDA_CABECALHO INTEGER  NOT NULL  ,
  ITEM INTEGER    ,
  QUANTIDADE DECIMAL(18,6)    ,
  VALOR_UNITARIO DECIMAL(18,6)    ,
  VALOR_TOTAL DECIMAL(18,6)      ,
PRIMARY KEY(ID)    ,
  FOREIGN KEY(ID_ECF_PRE_VENDA_CABECALHO)
    REFERENCES ECF_PRE_VENDA_CABECALHO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_PRODUTO)
    REFERENCES PRODUTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_PV_CAB_DET ON ECF_PRE_VENDA_DETALHE (ID_ECF_PRE_VENDA_CABECALHO);
CREATE INDEX FK_PRODUTO_PV_DET ON ECF_PRE_VENDA_DETALHE (ID_PRODUTO);

CREATE TRIGGER AINC_ECF_PRE_VENDA_DETALHE FOR ECF_PRE_VENDA_DETALHE ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_PRE_VENDA_DETALHE,1); 
END
/


CREATE TABLE ECF_VENDA_CABECALHO (
  ID INTEGER  NOT NULL  ,
  ID_ECF_DAV INTEGER    ,
  ID_ECF_PRE_VENDA_CABECALHO INTEGER    ,
  ID_CLIENTE INTEGER    ,
  ID_ECF_FUNCIONARIO INTEGER    ,
  ID_ECF_MOVIMENTO INTEGER  NOT NULL  ,
  CFOP INTEGER  NOT NULL  ,
  COO INTEGER    ,
  CCF INTEGER    ,
  DATA_VENDA DATE    ,
  HORA_VENDA VARCHAR(8)    ,
  VALOR_VENDA DECIMAL(18,6)    ,
  TAXA_DESCONTO DECIMAL(18,6)    ,
  DESCONTO DECIMAL(18,6)    ,
  TAXA_ACRESCIMO DECIMAL(18,6)    ,
  ACRESCIMO DECIMAL(18,6)    ,
  VALOR_FINAL DECIMAL(18,6)    ,
  VALOR_RECEBIDO DECIMAL(18,6)    ,
  TROCO DECIMAL(18,6)    ,
  VALOR_CANCELADO DECIMAL(18,6)    ,
  SINCRONIZADO CHAR(1)    ,
  TOTAL_PRODUTOS DECIMAL(18,6)    ,
  TOTAL_DOCUMENTO DECIMAL(18,6)    ,
  BASE_ICMS DECIMAL(18,6)    ,
  ICMS DECIMAL(18,6)    ,
  ICMS_OUTRAS DECIMAL(18,6)    ,
  ISSQN DECIMAL(18,6)    ,
  PIS DECIMAL(18,6)    ,
  COFINS DECIMAL(18,6)    ,
  ACRESCIMO_ITENS DECIMAL(18,6)    ,
  DESCONTO_ITENS DECIMAL(18,6)    ,
  STATUS_VENDA CHAR(1)    ,
  NOME_CLIENTE VARCHAR(100)    ,
  CPF_CNPJ_CLIENTE VARCHAR(14)    ,
  CUPOM_CANCELADO CHAR(1)    ,
  VINCULADO_IMPRESSO_1VIA CHAR(1)    ,
  VINCULADO_IMPRESSO_2VIA CHAR(1)    ,
  HASH_TRIPA VARCHAR(32)      ,
PRIMARY KEY(ID)          ,
  FOREIGN KEY(ID_ECF_MOVIMENTO)
    REFERENCES ECF_MOVIMENTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_FUNCIONARIO)
    REFERENCES ECF_FUNCIONARIO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_CLIENTE)
    REFERENCES CLIENTE(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_PRE_VENDA_CABECALHO)
    REFERENCES ECF_PRE_VENDA_CABECALHO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_DAV)
    REFERENCES ECF_DAV_CABECALHO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_MOVIMENTO_VENDA_CAB ON ECF_VENDA_CABECALHO (ID_ECF_MOVIMENTO);
CREATE INDEX FK_VENDEDOR_VENDA ON ECF_VENDA_CABECALHO (ID_ECF_FUNCIONARIO);
CREATE INDEX FK_CLIENTE_VENDA ON ECF_VENDA_CABECALHO (ID_CLIENTE);
CREATE INDEX FK_PV_VENDA ON ECF_VENDA_CABECALHO (ID_ECF_PRE_VENDA_CABECALHO);
CREATE INDEX FK_DAV_VENDA ON ECF_VENDA_CABECALHO (ID_ECF_DAV);

CREATE TRIGGER AINC_ECF_VENDA_CABECALHO FOR ECF_VENDA_CABECALHO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_VENDA_CABECALHO,1); 
END
/

CREATE TABLE ECF_TOTAL_TIPO_PGTO (
  ID INTEGER  NOT NULL  ,
  ID_ECF_VENDA_CABECALHO INTEGER  NOT NULL  ,
  ID_ECF_TIPO_PAGAMENTO INTEGER  NOT NULL  ,
  VALOR DECIMAL(18,6)    ,
  NSU VARCHAR(30)    ,
  ESTORNO CHAR(1)    ,
  REDE VARCHAR(10)    ,
  CARTAO_DC CHAR(1)      ,
PRIMARY KEY(ID)    ,
  FOREIGN KEY(ID_ECF_TIPO_PAGAMENTO)
    REFERENCES ECF_TIPO_PAGAMENTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_VENDA_CABECALHO)
    REFERENCES ECF_VENDA_CABECALHO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_TIPO_PGTO_TOTAL ON ECF_TOTAL_TIPO_PGTO (ID_ECF_TIPO_PAGAMENTO);
CREATE INDEX FK_VENDA_CAB_TOTAL_TIPO_PGTO ON ECF_TOTAL_TIPO_PGTO (ID_ECF_VENDA_CABECALHO);

CREATE TRIGGER AINC_ECF_TOTAL_TIPO_PGTO FOR ECF_TOTAL_TIPO_PGTO ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_TOTAL_TIPO_PGTO,1); 
END
/


CREATE TABLE ECF_VENDA_DETALHE (
  ID INTEGER  NOT NULL  ,
  ID_ECF_PRODUTO INTEGER  NOT NULL  ,
  ID_ECF_VENDA_CABECALHO INTEGER  NOT NULL  ,
  CFOP INTEGER  NOT NULL  ,
  ITEM INTEGER    ,
  QUANTIDADE DECIMAL(18,6)    ,
  VALOR_UNITARIO DECIMAL(18,6)    ,
  VALOR_TOTAL DECIMAL(18,6)    ,
  TOTAL_ITEM DECIMAL(18,6)    ,
  BASE_ICMS DECIMAL(18,6)    ,
  TAXA_ICMS DECIMAL(18,6)    ,
  ICMS DECIMAL(18,6)    ,
  TAXA_DESCONTO DECIMAL(18,6)    ,
  DESCONTO DECIMAL(18,6)    ,
  TAXA_ISSQN DECIMAL(18,6)    ,
  ISSQN DECIMAL(18,6)    ,
  TAXA_PIS DECIMAL(18,6)    ,
  PIS DECIMAL(18,6)    ,
  TAXA_COFINS DECIMAL(18,6)    ,
  COFINS DECIMAL(18,6)    ,
  TAXA_ACRESCIMO DECIMAL(18,6)    ,
  ACRESCIMO DECIMAL(18,6)    ,
  ACRESCIMO_RATEIO DECIMAL(18,6)    ,
  DESCONTO_RATEIO DECIMAL(18,6)    ,
  TOTALIZADOR_PARCIAL VARCHAR(10)    ,
  CST CHAR(3)    ,
  CANCELADO CHAR(1)    ,
  MOVIMENTA_ESTOQUE CHAR(1)    ,
  HASH_TRIPA VARCHAR(32)      ,
PRIMARY KEY(ID)    ,
  FOREIGN KEY(ID_ECF_VENDA_CABECALHO)
    REFERENCES ECF_VENDA_CABECALHO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION,
  FOREIGN KEY(ID_ECF_PRODUTO)
    REFERENCES PRODUTO(ID)
      ON DELETE NO ACTION
      ON UPDATE NO ACTION);

CREATE INDEX FK_VENDA_CAB_DET ON ECF_VENDA_DETALHE (ID_ECF_VENDA_CABECALHO);
CREATE INDEX FK_PRODUTO_VENDA_DET ON ECF_VENDA_DETALHE (ID_ECF_PRODUTO);

CREATE TRIGGER AINC_ECF_VENDA_DETALHE FOR ECF_VENDA_DETALHE ACTIVE BEFORE INSERT POSITION 0 AS
BEGIN 
  IF (NEW.ID IS NULL) THEN 
    NEW.ID = GEN_ID(GEN_ECF_VENDA_DETALHE,1); 
END
/